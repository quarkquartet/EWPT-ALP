#!/usr/bin/python3
import numpy as np
from cosmoTransitions import pathDeformation as pd
import datetime

################################################################################
# definition of models 

def V11_190610829(X):
    x1 = X[...,0]
    c1 = 0.47
    return x1*x1*x1*x1/4. - (c1+1.)*x1*x1*x1/3. + c1*x1*x1/2.

def dV11_190610829(X):
    x1 = X[...,0]
    c1 = 0.47
    rval = np.empty_like(X)
    rval[...,0] = x1*x1*x1 - (c1+1.)*x1*x1 + c1*x1
    return rval


def V12_190610829(X):
    x1 = X[...,0]
    c1 = 0.2
    return x1*x1*x1*x1/4. - (c1+1.)*x1*x1*x1/3. + c1*x1*x1/2.

def dV12_190610829(X):
    x1 = X[...,0]
    c1 = 0.2
    rval = np.empty_like(X)
    rval[...,0] = x1*x1*x1 - (c1+1.)*x1*x1 + c1*x1
    return rval


def V21_190610829(X):
    c=2.
    x1,x2 = X[...,0], X[...,1]
    r1 = x1*x1 + 5.*x2*x2
    r2 = 5.*(x1-1.)**2 + (x2-1.)**2
    r3 = c*(x2*x2*x2*x2/4. - x2*x2*x2/3.)
    return r1*r2+r3

def dV21_190610829(X):
    c=2.
    x1,x2 = X[...,0], X[...,1]
    r1 = x1*x1 + 5.*x2*x2
    r2 = 5.*(x1-1.)**2 + (x2-1.)**2
    r3 = c*(x2*x2*x2*x2/4. - x2*x2*x2/3.)
    rval = np.empty_like(X)
    rval[...,0] = 2.*x1*r2 + r1*10.*(x1-1.)
    rval[...,1] = 10.*x2*r2 + r1*2.*(x2-1.) + c*(x2*x2*x2 - x2*x2)
    return rval


def V22_190610829(X):
    c=80.
    x1,x2 = X[...,0], X[...,1]
    r1 = x1*x1 + 5.*x2*x2
    r2 = 5.*(x1-1.)**2 + (x2-1.)**2
    r3 = c*(x2*x2*x2*x2/4. - x2*x2*x2/3.)
    return r1*r2+r3

def dV22_190610829(X):
    c=80.
    x1,x2 = X[...,0], X[...,1]
    r1 = x1*x1 + 5.*x2*x2
    r2 = 5.*(x1-1.)**2 + (x2-1.)**2
    r3 = c*(x2*x2*x2*x2/4. - x2*x2*x2/3.)
    rval = np.empty_like(X)
    rval[...,0] = 2.*x1*r2 + r1*10.*(x1-1.)
    rval[...,1] = 10.*x2*r2 + r1*2.*(x2-1.) + c*(x2*x2*x2 - x2*x2)
    return rval


def V1_190103714(X):
    x1 = X[...,0]
    return 0.1*(x1*x1*x1*x1 - 8.*x1*x1*x1 + 10.*x1*x1)

def dV1_190103714(X):
    x1 = X[...,0]
    rval = np.empty_like(X)
    rval[...,0] = 0.4*x1*x1*x1 - 2.4*x1*x1 + 2.*x1
    return rval


def V2_190103714(X):
    c1=1.8
    c2=0.2
    c3=0.3
    x1,x2 = X[...,0], X[...,1]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2
    r2 = x1**2 + x2**2
    return (r1-c3)*r2

def dV2_190103714(X):
    c1=1.8
    c2=0.2
    c3=0.3
    x1,x2 = X[...,0], X[...,1]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2
    r2 = x1**2 + x2**2 
    rval = np.empty_like(X)
    rval[...,0] = 2.*c1*(x1-1.)*r2 + 2.*x1*(r1-c3)
    rval[...,1] = 2.*c2*(x2-1.)*r2 + 2.*x2*(r1-c3)
    return rval


def V3_190103714(X):
    c1=0.684373
    c2=0.181928
    c3=0.295089
    c4=0.284821
    x1,x2,x3 = X[...,0], X[...,1], X[...,2]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2
    r2 = x1**2 + x2**2 + x3**2 
    return (r1-c4)*r2

def dV3_190103714(X):
    c1=0.684373
    c2=0.181928
    c3=0.295089
    c4=0.284821
    x1,x2,x3 = X[...,0], X[...,1], X[...,2]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2
    r2 = x1**2 + x2**2 + x3**2
    rval = np.empty_like(X)
    rval[...,0] = 2.*c1*(x1-1.)*r2 + 2.*x1*(r1-c4)
    rval[...,1] = 2.*c2*(x2-1.)*r2 + 2.*x2*(r1-c4)
    rval[...,2] = 2.*c3*(x3-1.)*r2 + 2.*x3*(r1-c4)
    return rval


def V4_190103714(X):
    c1=0.534808
    c2=0.77023
    c3=0.838912
    c4=0.00517238 
    c5=0.258889
    x1,x2,x3,x4 = X[...,0], X[...,1], X[...,2], X[...,3]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2 +c4*(x4-1.)**2
    r2 = x1**2 + x2**2 + x3**2 + x4**2
    return (r1-c5)*r2

def dV4_190103714(X):
    c1=0.534808
    c2=0.77023
    c3=0.838912
    c4=0.00517238 
    c5=0.258889
    x1,x2,x3,x4 = X[...,0], X[...,1], X[...,2], X[...,3]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2 +c4*(x4-1.)**2
    r2 = x1**2 + x2**2 + x3**2 + x4**2
    rval = np.empty_like(X)
    rval[...,0] = 2.*c1*(x1-1.)*r2 + 2.*x1*(r1-c5)
    rval[...,1] = 2.*c2*(x2-1.)*r2 + 2.*x2*(r1-c5)
    rval[...,2] = 2.*c3*(x3-1.)*r2 + 2.*x3*(r1-c5)
    rval[...,3] = 2.*c4*(x4-1.)*r2 + 2.*x4*(r1-c5)
    return rval


def V5_190103714(X):
    c1=0.4747
    c2=0.234808
    c3=0.57023
    c4=0.138912
    c5=0.517238
    c6=0.658889
    x1,x2,x3,x4,x5 = X[...,0], X[...,1], X[...,2], X[...,3], X[...,4]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2 +c4*(x4-1.)**2 +c5*(x5-1.)**2
    r2 = x1**2 + x2**2 + x3**2 + x4**2 + x5**2
    return (r1-c6)*r2

def dV5_190103714(X):
    c1=0.4747
    c2=0.234808
    c3=0.57023
    c4=0.138912
    c5=0.517238
    c6=0.658889
    x1,x2,x3,x4,x5 = X[...,0], X[...,1], X[...,2], X[...,3], X[...,4]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2 +c4*(x4-1.)**2 +c5*(x5-1.)**2
    r2 = x1**2 + x2**2 + x3**2 + x4**2 + x5**2
    rval = np.empty_like(X)
    rval[...,0] = 2.*c1*(x1-1.)*r2 + 2.*x1*(r1-c6)
    rval[...,1] = 2.*c2*(x2-1.)*r2 + 2.*x2*(r1-c6)
    rval[...,2] = 2.*c3*(x3-1.)*r2 + 2.*x3*(r1-c6)
    rval[...,3] = 2.*c4*(x4-1.)*r2 + 2.*x4*(r1-c6)
    rval[...,4] = 2.*c5*(x5-1.)*r2 + 2.*x5*(r1-c6)
    return rval


def V6_190103714(X):
    c1=0.34234
    c2=0.4747
    c3=0.234808
    c4=0.57023
    c5=0.138912
    c6=0.517238
    c7=0.658889
    x1,x2,x3,x4,x5,x6 = X[...,0], X[...,1], X[...,2], X[...,3], X[...,4], X[...,5]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2 +c4*(x4-1.)**2 +c5*(x5-1.)**2 +c6*(x6-1.)**2
    r2 = x1**2 + x2**2 + x3**2 + x4**2 + x5**2 + x6**2 
    return (r1-c7)*r2

def dV6_190103714(X):
    c1=0.34234
    c2=0.4747
    c3=0.234808
    c4=0.57023
    c5=0.138912
    c6=0.517238
    c7=0.658889
    x1,x2,x3,x4,x5,x6 = X[...,0], X[...,1], X[...,2], X[...,3], X[...,4], X[...,5]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2 +c4*(x4-1.)**2 +c5*(x5-1.)**2 +c6*(x6-1.)**2 
    r2 = x1**2 + x2**2 + x3**2 + x4**2 + x5**2 + x6**2
    rval = np.empty_like(X)
    rval[...,0] = 2.*c1*(x1-1.)*r2 + 2.*x1*(r1-c7)
    rval[...,1] = 2.*c2*(x2-1.)*r2 + 2.*x2*(r1-c7)
    rval[...,2] = 2.*c3*(x3-1.)*r2 + 2.*x3*(r1-c7)
    rval[...,3] = 2.*c4*(x4-1.)*r2 + 2.*x4*(r1-c7)
    rval[...,4] = 2.*c5*(x5-1.)*r2 + 2.*x5*(r1-c7)
    rval[...,5] = 2.*c6*(x6-1.)*r2 + 2.*x6*(r1-c7)
    return rval


def V7_190103714(X):
    c1=0.5233
    c2=0.34234
    c3=0.4747
    c4=0.234808
    c5=0.57023
    c6=0.138912
    c7=0.517238
    c8=0.658889
    x1,x2,x3,x4,x5,x6,x7 = X[...,0], X[...,1], X[...,2], X[...,3], X[...,4], X[...,5], X[...,6]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2 +c4*(x4-1.)**2 +c5*(x5-1.)**2 +c6*(x6-1.)**2 +c7*(x7-1.)**2
    r2 = x1**2 + x2**2 + x3**2 + x4**2 + x5**2 + x6**2 + x7**2
    return (r1-c8)*r2

def dV7_190103714(X):
    c1=0.5233
    c2=0.34234
    c3=0.4747
    c4=0.234808
    c5=0.57023
    c6=0.138912
    c7=0.517238
    c8=0.658889
    x1,x2,x3,x4,x5,x6,x7 = X[...,0], X[...,1], X[...,2], X[...,3], X[...,4], X[...,5], X[...,6]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2 +c4*(x4-1.)**2 +c5*(x5-1.)**2 +c6*(x6-1.)**2 +c7*(x7-1.)**2
    r2 = x1**2 + x2**2 + x3**2 + x4**2 + x5**2 + x6**2 + x7**2
    rval = np.empty_like(X)
    rval[...,0] = 2.*c1*(x1-1.)*r2 + 2.*x1*(r1-c8)
    rval[...,1] = 2.*c2*(x2-1.)*r2 + 2.*x2*(r1-c8)
    rval[...,2] = 2.*c3*(x3-1.)*r2 + 2.*x3*(r1-c8)
    rval[...,3] = 2.*c4*(x4-1.)*r2 + 2.*x4*(r1-c8)
    rval[...,4] = 2.*c5*(x5-1.)*r2 + 2.*x5*(r1-c8)
    rval[...,5] = 2.*c6*(x6-1.)*r2 + 2.*x6*(r1-c8)
    rval[...,6] = 2.*c7*(x7-1.)*r2 + 2.*x7*(r1-c8)
    return rval


def V8_190103714(X):
    c1=0.2434
    c2=0.5233
    c3=0.34234
    c4=0.4747
    c5=0.234808
    c6=0.57023
    c7=0.138912
    c8=0.51723
    c9=0.658889
    x1,x2,x3,x4,x5,x6,x7,x8 = X[...,0], X[...,1], X[...,2], X[...,3], X[...,4], X[...,5], X[...,6], X[...,7]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2 +c4*(x4-1.)**2 +c5*(x5-1.)**2 +c6*(x6-1.)**2 +c7*(x7-1.)**2 +c8*(x8-1.)**2
    r2 = x1**2 + x2**2 + x3**2 + x4**2 + x5**2 + x6**2 + x7**2 + x8**2
    return (r1-c9)*r2

def dV8_190103714(X):
    c1=0.2434
    c2=0.5233
    c3=0.34234
    c4=0.4747
    c5=0.234808
    c6=0.57023
    c7=0.138912
    c8=0.51723
    c9=0.658889
    x1,x2,x3,x4,x5,x6,x7,x8 = X[...,0], X[...,1], X[...,2], X[...,3], X[...,4], X[...,5], X[...,6], X[...,7]
    r1 = c1*(x1-1.)**2 +c2*(x2-1.)**2 +c3*(x3-1.)**2 +c4*(x4-1.)**2 +c5*(x5-1.)**2 +c6*(x6-1.)**2 +c7*(x7-1.)**2 +c8*(x8-1.)**2
    r2 = x1**2 + x2**2 + x3**2 + x4**2 + x5**2 + x6**2 + x7**2 + x8**2
    rval = np.empty_like(X)
    rval[...,0] = 2.*c1*(x1-1.)*r2 + 2.*x1*(r1-c9)
    rval[...,1] = 2.*c2*(x2-1.)*r2 + 2.*x2*(r1-c9)
    rval[...,2] = 2.*c3*(x3-1.)*r2 + 2.*x3*(r1-c9)
    rval[...,3] = 2.*c4*(x4-1.)*r2 + 2.*x4*(r1-c9)
    rval[...,4] = 2.*c5*(x5-1.)*r2 + 2.*x5*(r1-c9)
    rval[...,5] = 2.*c6*(x6-1.)*r2 + 2.*x6*(r1-c9)
    rval[...,6] = 2.*c7*(x7-1.)*r2 + 2.*x7*(r1-c9)
    rval[...,7] = 2.*c8*(x8-1.)*r2 + 2.*x8*(r1-c9)
    return rval


################################################################################
# 1906.10829

Vlist = [V11_190610829, V12_190610829, V21_190610829, V22_190610829]
dVlist = [dV11_190610829, dV12_190610829, dV21_190610829, dV22_190610829]
TVlist = [[1.], [1.], [1.,1.], [1.,1.]]
FVlist = [[0.], [0.], [0.,0.], [0.,0.]]
timelist190610829 = []
actionlist190610829 = []

for V, dV, TV, FV in zip(Vlist, dVlist, TVlist, FVlist):
    tbefore=datetime.datetime.today()
    Y = pd.fullTunneling([TV,FV], V, dV, tunneling_init_params={'alpha':2}, deformation_deform_params={'fRatioConv':0.02, 'verbose':0}, verbose=False)
    tafter=datetime.datetime.today()
    timelist190610829.append(tafter - tbefore)
    actionlist190610829.append(Y.action)


# 1901.03714

Vlist = [V1_190103714, V2_190103714, V3_190103714, V4_190103714, V5_190103714, V6_190103714, V7_190103714, V8_190103714] 
dVlist = [dV1_190103714, dV2_190103714, dV3_190103714, dV4_190103714, dV5_190103714, dV6_190103714, dV7_190103714, dV8_190103714] 
TVlist = [[5.], [1.,1.], [1.,1.,1.], [1.,1.,1.,1.], [1.,1.,1.,1.,1.], [1.,1.,1.,1.,1.,1.], [1.,1.,1.,1.,1.,1.,1.], [1.,1.,1.,1.,1.,1.,1.,1.]]
FVlist = [[0.], [0.,0.], [0.,0.,0.], [0.,0.,0.,0.], [0.,0.,0.,0.,0.], [0.,0.,0.,0.,0.,0.], [0.,0.,0.,0.,0.,0.,0.], [0.,0.,0.,0.,0.,0.,0.,0.]]
timelist190103714 = []
actionlist190103714 = []

for V, dV, TV, FV in zip(Vlist, dVlist, TVlist, FVlist):
    tbefore=datetime.datetime.today()
    Y = pd.fullTunneling([TV,FV], V, dV, tunneling_init_params={'alpha':2}, deformation_deform_params={'fRatioConv':0.02, 'verbose':0}, verbose=False)
    tafter=datetime.datetime.today()
    timelist190103714.append(tafter - tbefore)
    actionlist190103714.append(Y.action)


################################################################################

print('# results of cosmoTransitions')
print('# Table 1 in 1901.03714')
print('# model runtime action')
for time, action in zip(timelist190103714, actionlist190103714):
    print(action, ' ', time)
print('')
print('# Eq. 40, 41, 42, 43 in 1906.10829')
print('# model runtime action')
for time, action in zip(timelist190610829, actionlist190610829):
    print(action, ' ', time)


